CreateTable:
  desired: |
    CREATE TABLE users (
      id bigint NOT NULL,
      name text,
      age integer
    );
    CREATE TABLE bigdata (
      data bigint
    );
DropTable:
  current: |
    CREATE TABLE users (
      id bigint NOT NULL,
      name text,
      age integer
    );
    CREATE TABLE bigdata (
      data bigint
    );
  desired: |
    CREATE TABLE users (
      id bigint NOT NULL,
      name text,
      age integer
    );
  output: |
    DROP TABLE "public"."bigdata";
EmptyTable:
  desired: |
    CREATE TABLE public.test ();
CreateTableWithDefault:
  desired: |
    CREATE TABLE users (
      profile character varying(50) NOT NULL DEFAULT ''::character varying,
      default_int int default 20,
      default_bool bool default true,
      default_numeric numeric(5) default 42.195,
      default_fixed_char character(3) default 'JPN'::bpchar,
      default_text text default ''::text,
      default_json json default '[]'::json,
      default_current_timestamp timestamp default CURRENT_TIMESTAMP,
      default_current_date date default CURRENT_DATE,
      default_current_time time default CURRENT_TIME,
      joined_at timestamp with time zone NOT NULL DEFAULT '0001-01-01 00:00:00'::timestamp without time zone,
      created_at timestamp with time zone DEFAULT now()
    );
CreateTableChangeDefaultBoolean:
  current: |
    CREATE TABLE test (
      col boolean default true
    );
  desired: |
    CREATE TABLE test (
      col boolean default false
    );
  output: |
    ALTER TABLE "public"."test" ALTER COLUMN "col" SET DEFAULT false;
CastBpchar:
  desired: |
    CREATE TABLE public.dummy_table (
      "col" character(30)
    );
    CREATE VIEW public.dummy_view AS SELECT dummy_table.col FROM dummy_table WHERE (dummy_table.col <> 'dummy value'::bpchar);
ParseTextCheckConstraint:
  current: |
    CREATE TABLE test (
      col text NOT NULL CHECK (col <> ''::text)
    );
  desired: |
    CREATE TABLE test (
      col text NOT NULL
    );
  output: |
    ALTER TABLE "public"."test" DROP CONSTRAINT test_col_check;
NullCast:
  desired: |
    CREATE TABLE public.test (
      "item" character varying(16) DEFAULT NULL
    );
NumericCast:
  desired: |
    CREATE TABLE public.test_table (
      "item" numeric
    );
    CREATE VIEW public.test_view AS SELECT t.item FROM test_table t WHERE (t.item = (0)::numeric);
CreateIndexConcurrently:
  current: |
    CREATE TABLE users (
      id BIGINT NOT NULL PRIMARY KEY,
      name VARCHAR(128) DEFAULT 'konsumer'
    );
  desired: |
    CREATE TABLE users (
      id BIGINT NOT NULL PRIMARY KEY,
      name VARCHAR(128) DEFAULT 'konsumer'
    );
    CREATE INDEX CONCURRENTLY username on users (name);
  output: |
    CREATE INDEX CONCURRENTLY username on users (name);
AlterTypeAddValue:
  current: |
    CREATE TYPE eventtype AS ENUM (
      'example',
      'send_message'
    );

    CREATE TABLE events (
      id UUID NOT NULL PRIMARY KEY,
      event_type eventtype NOT NULL
    );
  desired: |
    CREATE TYPE eventtype AS ENUM (
      'example',
      'send_message',
      'send_meeting_options',
      'update_reactionslot'
    );

    CREATE TABLE events (
      id UUID NOT NULL PRIMARY KEY,
      event_type eventtype NOT NULL
    );
  output: |
    ALTER TYPE public.eventtype ADD VALUE 'send_meeting_options';
    ALTER TYPE public.eventtype ADD VALUE 'update_reactionslot';
