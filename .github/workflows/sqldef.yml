name: sqldef
on:
  push:
    branches:
      - master
    tags:
      - v*
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - sqlite3def
          - mssqldef
        include:
          - target: mysqldef
            mysql_version: '5.7'
          - target: mysqldef
            mysql_version: '8.0'
          - target: psqldef
            postgres_version: 10
          - target: psqldef
            postgres_version: 11
          - target: psqldef
            postgres_version: 12
          - target: psqldef
            postgres_version: 13
          - target: psqldef
            postgres_version: 14
      fail-fast: false
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - uses: actions/checkout@v3

      - run: docker-compose up -d
        env:
          MYSQL_VERSION: ${{ matrix.mysql_version }}
          POSTGRES_VERSION: ${{ matrix.postgres_version }}
      - run: make deps
      - run: make test-${{ matrix.target }}

  package:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - { GOOS: linux,   GOARCH: amd64, ZIG_TARGET: x86_64-linux,       extension: tar.gz }
          - { GOOS: linux,   GOARCH: '386', ZIG_TARGET: i386-linux,         extension: tar.gz }
          - { GOOS: linux,   GOARCH: arm64, ZIG_TARGET: aarch64-linux,      extension: tar.gz }
          - { GOOS: linux,   GOARCH: arm,   ZIG_TARGET: arm-linux-musleabi, extension: tar.gz }
          - { GOOS: windows, GOARCH: amd64, ZIG_TARGET: x86_64-windows,     extension: zip }
          - { GOOS: windows, GOARCH: '386', ZIG_TARGET: i386-windows,       extension: zip }
          - { GOOS: darwin,  GOARCH: amd64, ZIG_TARGET: x86_64-macos,       extension: zip,
              CGO_LDFLAGS: '-mmacosx-version-min=10.14 --sysroot /home/runner/work/sqldef/sqldef/MacOSX.sdk -F/System/Library/Frameworks -L/usr/lib',
              ZIG_CFLAGS:  '-mmacosx-version-min=10.14 -isysroot /home/runner/work/sqldef/sqldef/MacOSX.sdk -iwithsysroot /usr/include -iframeworkwithsysroot /System/Library/Frameworks' }
          - { GOOS: darwin,  GOARCH: arm64, ZIG_TARGET: aarch64-macos,      extension: zip,
              CGO_LDFLAGS: '-mmacosx-version-min=11.1  --sysroot /home/runner/work/sqldef/sqldef/MacOSX.sdk -F/System/Library/Frameworks -L/usr/lib',
              ZIG_CFLAGS:  '-mmacosx-version-min=11.1  -isysroot /home/runner/work/sqldef/sqldef/MacOSX.sdk -iwithsysroot /usr/include -iframeworkwithsysroot /System/Library/Frameworks' }
    steps:
      - uses: actions/setup-go@v3
        with:
          go-version: 1.19
      - uses: actions/checkout@v3

      - name: Download MacOSX SDK
        run: make MacOSX.sdk
        if: ${{ matrix.GOOS == 'darwin' }}

      - uses: goto-bus-stop/setup-zig@v1
        with:
          version: 0.9.1
      - run: |
          make package-${{ matrix.extension }} GOOS=${{ matrix.GOOS }} GOARCH=${{ matrix.GOARCH }} \
            ZIG_TARGET=${{ matrix.ZIG_TARGET }} "ZIG_CFLAGS=${{ matrix.ZIG_CFLAGS }}" "CGO_LDFLAGS=${{ matrix.CGO_LDFLAGS }}"

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: sqldef-${{ matrix.GOOS }}-${{ matrix.GOARCH }}
          path: package/*def_${{ matrix.GOOS }}_${{ matrix.GOARCH }}.${{ matrix.extension }}

  release:
    runs-on: ubuntu-latest
    needs:
      - test
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v3

      - { uses: actions/download-artifact@v3, with: { name: sqldef-linux-amd64,   path: package/ } }
      - { uses: actions/download-artifact@v3, with: { name: sqldef-linux-386,     path: package/ } }
      - { uses: actions/download-artifact@v3, with: { name: sqldef-linux-arm64,   path: package/ } }
      - { uses: actions/download-artifact@v3, with: { name: sqldef-linux-arm,     path: package/ } }
      - { uses: actions/download-artifact@v3, with: { name: sqldef-darwin-amd64,  path: package/ } }
      - { uses: actions/download-artifact@v3, with: { name: sqldef-darwin-arm64,  path: package/ } }
      - { uses: actions/download-artifact@v3, with: { name: sqldef-windows-amd64, path: package/ } }
      - { uses: actions/download-artifact@v3, with: { name: sqldef-windows-386,   path: package/ } }

      - name: Release binaries
        run: |
          export VERSION=$(echo "$GITHUB_REF" | sed -e 's!refs/tags/!!')
          curl -L "https://github.com/tcnksm/ghr/releases/download/${GHR_VERSION}/ghr_${GHR_VERSION}_linux_amd64.tar.gz" | tar xvz
          "ghr_${GHR_VERSION}_linux_amd64/ghr" -u k0kubun -r sqldef -replace -n "$VERSION" "$VERSION" package/
        env:
          GHR_VERSION: v0.13.0
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/checkout@v3
        with:
          repository: sqldef/homebrew-sqldef
          ssh-key: ${{ secrets.HOMEBREW_DEPLOY_KEY }}
          path: ./homebrew-sqldef
      - name: Update homebrew
        run: |
          set -x
          cd ./homebrew-sqldef
          VERSION=$(echo "$GITHUB_REF" | sed -e 's!refs/tags/!!')
          sed -i -e "s/tag: '.*'/tag: '$VERSION'/" mysqldef.rb psqldef.rb
          git add .
          if ! git diff-index --quiet HEAD --; then
            git config --global user.email "k0kubun@github.com"
            git config --global user.name "sqldef"
            git commit -m "Version $VERSION"
            git push origin master
          fi
